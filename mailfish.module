<?php
/**
 * @file
 * A description of what your module does.
 */

/**
 * Implements hook_permission().
 */
function mailfish_permission() {
  $perms = array(
    'submit mailfish signups' => array(
      'title' => t('Submit Mailfish Signups'),
    ),
    'view mailfish report' => array(
      'title' => t('View Mailfish Subscriptions Report'),
    ),
    'administer mailfish settings' => array(
      'title' => t('Administer Mailfish Settings'),
    ),
  );
  return $perms;
}

/**
 * Implements hook_menu().
 */
function mailfish_menu() {
  $items = array();
  $items['node/%/subscribe'] = array(
    'title' => 'Subscribe',
    'description' => t('Subscribe to this node.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mailfish_email_form', 1),
    'access arguments' => array('submit mailfish signups'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Provides the form to add an email address.
 */
function mailfish_email_form($form, $form_state, $nid = 0) {
  global $user;
  $form['email'] = array(
    '#title' => t('Email Address'),
    '#type' => 'textfield',
    '#size' => 25,
    '#description' => t('Join our mailing list'),
    '#required' => TRUE,
    '#default_value' => isset($user->mail) ? $user->mail : '',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Sign Up!'),
  );
  $form['nid'] = array(
    '#type' => 'hidden',
    '#value' => $nid,
  );
  return $form;
}

/**
 * Validation handler for mailfish_email_form.
 */
function mailfish_email_form_validate($form, &$form_state) {
  $email = $form_state['values']['email'];
  if (!valid_email_address($email)) {
    $message = t('The address %email is not a valid email address. Please re-enter your address.', array('%email' => $email));
    form_set_error('email', $message);
  }
  /*
   * Performs check on database for previous signup.
   */
  $nid = $form_state['values']['nid'];
  $previous_signup = db_query("SELECT mail FROM {mailfish} WHERE nid = :nid AND mail = :mail",
    array('nid' => $nid, 'mail' => $email))->fetchField();
  if ($previous_signup) {
    form_set_error('emai', t('The address %email is already subscribed to this list.', array('%email' => $email)));
  }
}

/**
 * Submit handler for mailfish_email_form.
 */
function mailfish_email_form_submit($form, &$form_state) {
  $nid = isset($form_state['values']['nid']) ? $form_state['values']['nid'] : 0;
  if ($nid && is_numeric($nid)) {
    mailfish_signup($form_state['values']['email'], $nid);
    drupal_set_message(t('Thank you for joining the mailing list. You have been added as %email',
      array('%email' => $form_state['values']['email'])));
  }
}

/**
 * Signup function for mailfish.
 *
 * Creates a record in the mailfish table, linking the user to the node id.
 */
function mailfish_signup($email, $nid) {
  global $user;
  $value = array(
    'nid' => $nid,
    'uid' => $user->uid,
    'mail' => $email,
    'created' => time(),
  );
  drupal_write_record('mailfish', $value);
}

/**
 * Implements hook_block_info().
 */
function mailfish_block_info() {
  $blocks = array();
  $blocks['mailfish_subscribe'] = array(
    'info' => t('Mailfish Signup Form'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function mailfish_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'mailfish_subscribe':
      if (arg(0) == 'node' && is_numeric(arg(1))) {
        $nid = arg(1);
        $form = drupal_get_form('mailfish_email_form', $nid);
        $block = array(
          'subject' => t('Sign up for this node'),
          'content' => theme('mailfish_block', array('form' => drupal_render($form))),
        );
      }
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function mailfish_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['mailfish_block'] = array(
    'variables' => array(
      'form' => '',
    ),
    'template' => 'mailfish-block',
  );
  return $theme;
}
